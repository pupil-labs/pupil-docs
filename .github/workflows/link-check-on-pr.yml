name: üåç Links check on PR

# This Action is designed to be used in a pull request (PR) workflow on GitHub. 
# It uses the actions/checkout action to check out the PR branch and compare it with the base branch. 
# Then, it uses the tj-actions/changed-files action to get a list of files that have been added or modified in the PR. 
# This list is then passed to the lycheeverse/lychee-action action, which checks the files for broken links.
# If the lychee-action step finds any broken links, a second job is triggered to test the broken links again,
# this time using the URL of the branch on which the PR is based. 
# This is done by getting the branch URL with a run step, then passing the broken URLs to lychee-action to test again 
# with the new URL.
# Overall, this Action is intended to help ensure that links in files added or modified in a PR do not lead to broken pages.

on:
  pull_request

jobs:
  check_links_on_pr_files_online:
    runs-on: ubuntu-latest
    name: Test changed-files for broken links
    outputs:
      lychee_exited: ${{ steps.stringify.outputs.lychee_exited }}
      lychee_file: ${{ steps.stringify.outputs.lychee_file }}
    steps:
      # Compares the default generated "test merge commit" by Github of the PR branch into the base branch
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Gets a list of files from the PR with a git status of Added (A) or Modified (M) | (via outputs.all_changed_files)
      - name: 'Get a list of changed files to process(Only html/md/ipynb files)'
        id: get-changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/*.html
            **/*.md
            **/*.ipynb
          separator: ','

      # lychee-action requires pre-processing for file paths with spaces (boundary quotes added in lychee-action input):
      - name: 'Quote wrap paths to support spaces'
        id: changed-files
        run: |
          QUOTE_WRAPPED="$( sed "s/,/' '/g" <<< '${{ steps.get-changed-files.outputs.all_changed_files }}' )"
          echo "all_changed_files=${QUOTE_WRAPPED}" >> $GITHUB_OUTPUT

      - name: 'Check Links'
        id: lychee
        uses: lycheeverse/lychee-action@v1.5.4
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          args: -v -n -a 403,503,429,200 -i -b 'https://docs.pupil-labs.com/' --exclude-mail --include-verbatim -- '${{ steps.changed-files.outputs.all_changed_files }}'
          output: ./lychee/results.md
          jobSummary: true
      
      - name: 'Outputs as strings'
        id: stringify
        run: |
          EXIT_CODE_STRING="$( printf '%d' "${{ steps.lychee.outputs.exit_code }}" )"
          echo "lychee_exited=${EXIT_CODE_STRING}" >> $GITHUB_OUTPUT
          MD_OUT="$( cat ./lychee/results.md )"
          MD_OUT="${MD_OUT//'%'/'%25'}"
          MD_OUT="${MD_OUT//$'\n'/'%0A'}"
          MD_OUT="${MD_OUT//$'\r'/'%0D'}" 
          echo "text<<EOF" >> $GITHUB_OUTPUT
          echo "$MD_OUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "lychee_file=${MD_OUT}" >> $GITHUB_OUTPUT
        
  check_failed_links_using_new_branch_url:
    runs-on: ubuntu-latest
    name: Test failed links using branch url
    needs: check_links_on_pr_files_online
    outputs:
      lychee_exited_2: ${{ steps.stringify2.outputs.lychee_exited }}
      lychee_file_2: ${{ steps.stringify2.outputs.lychee_file }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Check if outputs did propagate across jobs'
        id: checks
        run: |
          echo ${{ needs.check_links_on_pr_files_online.outputs.lychee_exited }}
          echo ${{ needs.check_links_on_pr_files_online.outputs.lychee_file }}

      - name: 'Get branch url'
        id: git-branch-name
        run: |
          url="https://github.com/"
          url+=${{github.repository}}
          url+="/tree/"
          url+=${{github.ref}}
          url+="/src/"
          echo "branch_name=${url}" >> $GITHUB_OUTPUT
      
      - name: 'Get broken URLs from results.md'
        id: get-broken-urls
        run: |
          broken_urls="${{ needs.check_links_on_pr_files_online.outputs.lychee_file }}"
          broken_urls=$(echo "$broken_urls" | sed "s/%25/%/g")
          body=$(echo "$broken_urls" | sed "s/%0A/$'\n'/g")
          broken_urls=$(echo "$broken_urls" | sed "s/%0D/$'\r'/g")
          broken_urls=${broken_urls//https:\/\/docs.pupil-labs.com\//$''}
          echo ${broken_urls}
          mkdir -p temp
          echo ${broken_urls} > temp/broken_urls.md

      - name: 'Test again these broken links with the new branch url'
        id: final-links
        uses: lycheeverse/lychee-action@v1.5.4
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          args: -v -n -a 403,503,429,200 -i -b '${{ steps.git-branch-name.outputs.branch_name }}' --exclude-mail --include-verbatim --'temp/broken_urls.md'
          output: ./lychee/results_final.md
          jobSummary: true
      
      - name: 'Convert outputs to strings'
        id: stringify2
        run: |
          EXIT_CODE_STRING="$( printf '%d' "${{ steps.final-links.outputs.exit_code }}" )"
          echo "lychee_exited=${EXIT_CODE_STRING}" >> $GITHUB_OUTPUT
          MD_OUT="$( cat ./lychee/results_final.md )"
          MD_OUT="${MD_OUT//'%'/'%25'}"
          MD_OUT="${MD_OUT//$'\n'/'%0A'}"
          MD_OUT="${MD_OUT//$'\r'/'%0D'}" 
          echo "text<<EOF" >> $GITHUB_OUTPUT
          echo "$MD_OUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "lychee_file=${MD_OUT}" >> $GITHUB_OUTPUT

  post_comment:
    if: contains(['2'],${{ needs.check_failed_links_using_new_branch_url.outputs.lychee_exited_2}})
    runs-on: ubuntu-latest
    name: Post comment
    needs: [check_links_on_pr_files_online, check_failed_links_using_new_branch_url]
    steps:
      - id: get-comment-body
        run: |
          body="$(echo "# Link check summary"; ${{ needs.check_failed_links_using_new_branch_url.outputs.lychee_file_2 }})"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          # echo "text<<EOF" >> $GITHUB_OUTPUT
          # echo "$body" >> $GITHUB_OUTPUT
          # echo "EOF" >> $GITHUB_OUTPUT
          echo "::set-output name=body::$body" # the new output breaks format. See https://github.community/t/set-output-truncates-multiline-strings/16852/3
          # echo "body=${body}" >> $GITHUB_OUTPUT
          
      - name: Create comment
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{ steps.get-comment-body.outputs.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Fail workflow if link broken
        run: exit 1
